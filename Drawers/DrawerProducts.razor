@inject IJSRuntime JsRuntime
@inject IProductObserver ProductObserver

<!-- drawer component -->
<div id="@_id" class="fixed bottom-0 left-0 right-0 z-50 flex w-full translate-y-full items-center justify-center overflow-y-auto transition-transform" tabindex="-1" aria-labelledby="drawer-bottom-label">

    <div class="w-full rounded-t-xl bg-white p-4 dark:bg-black lg:max-w-lg">
        <div class="mt-5 flex max-h-[70dvh] min-h-[70dvh] flex-col px-3">

            @* Header. *@
            <div class="mt-5 flex w-full flex-col items-center justify-center">

                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 fill-current-500" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M15.528 2.973a.75.75 0 0 1 .472.696v8.662a.75.75 0 0 1-.472.696l-7.25 2.9a.75.75 0 0 1-.557 0l-7.25-2.9A.75.75 0 0 1 0 12.331V3.669a.75.75 0 0 1 .471-.696L7.443.184l.01-.003.268-.108a.75.75 0 0 1 .558 0l.269.108.01.003zM10.404 2 4.25 4.461 1.846 3.5 1 3.839v.4l6.5 2.6v7.922l.5.2.5-.2V6.84l6.5-2.6v-.4l-.846-.339L8 5.961 5.596 5l6.154-2.461z" />
                </svg>

                <label class="mt-2 text-xl font-bold dark:text-white">Agregar Productos</label>

                <div class="mt-2 w-full">
                    <input @oninput="Search" type="text" id="small-input" class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 p-2 text-gray-900 placeholder-gray-400 focus:border-current-500 focus:bg-white focus:outline-none focus:ring-current-500 dark:bg-zinc-900 dark:border-zinc-700 dark:text-gray-100 sm:text-xs focus:dark:bg-zinc-900">
                </div>

            </div>

            @* Componentes. *@
            <div class="flex-1 UIScroll mt-2 gap-3 overflow-y-auto">

                @if (Result.Count <= 0)
                {
                    <div class="border-2 mt-3 flex w-full items-center justify-center rounded-lg border-dashed border-zinc-300 py-7 dark:border-gray-400">
                        <label class="text-zinc-400 dark:text-gray-200">Sin resultados</label>
                    </div>
                }
                else
                {
                    @foreach (var e in Result)
                    {
                        bool exist = Selected.Any(t => t.Id == e.Id);
                        <ProductSelectControl Model="e" State="exist" OnClick="(i)=>SelectControl(i, exist)"></ProductSelectControl>
                    }
                }
            </div>

            @* Botón Aceptar. *@
            <div class="mb-2 mt-2 flex w-full items-end justify-center self-end">
                <button id="btn-close-panel-ide-@_id" type="button" class="w-full rounded-lg bg-current-500 px-3 py-2 text-center text-sm font-medium text-white hover:bg-current-600 focus:ring-4 focus:outline-none focus:ring-current-300 dark:bg-current-600 dark:hover:bg-current-700 dark:focus:ring-current-800">Aceptar</button>
            </div>

        </div>

    </div>

</div>